#!/usr/bin/env zsh

# ##### Completion #####
zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}'
zstyle ':completion:*' max-errors 2
zstyle ':completion:*' menu select=2
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion::*:cd::*' fzf-completion-opts --preview='eza --tree --level 1 --color=always {2} | head -200'
zstyle ':completion::*:(export|unset)::*' fzf-completion-opts --preview="eval 'echo $'{2}"
zstyle ':completion::*:aws::*' fzf-completion-opts -m 0
zstyle ':completion::*:*::*' fzf-completion-opts --preview='[[ $(file --mime {2}) =~ directory ]] && eza --tree --level 1 --color=always --icons {2} || ([[ $(file --mime {2}) =~ binary ]] && echo {2} is binary file || bat -n --color=always -r :500 {2})'


autoload -Uz compinit
compinit -C
autoload -Uz bashcompinit
bashcompinit

if command -v aws_completer &>/dev/null; then
  complete -C aws_completer aws
fi

# ##### Keybindings #####
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey -e
bindkey '^p' history-search-backward         # ctrl + p
bindkey '^n' history-search-forward          # ctrl + n
bindkey "^[[A" up-line-or-beginning-search   # up
bindkey "^[[B" down-line-or-beginning-search # down
bindkey '\e[H' beginning-of-line             # home
bindkey '\e[F' end-of-line                   # end
bindkey '\e[3~' delete-char                  # delete
bindkey '^[[1;3C' forward-word               # alt + r-arrow
bindkey '^[[1;3D' backward-word              # alt + l-arrow
bindkey '^[[1;5C' forward-word               # ctrl + r-arrow
bindkey '^[[1;5D' backward-word              # ctrl + l-arrow

# ##### History #####
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# ##### Aliases #####
source $ZDOTDIR/aliases.zsh

# ##### Options #####
setopt auto_cd

# ##### zoxide #####
if command -v zoxide &>/dev/null; then
  eval "$(zoxide init --cmd cd zsh)"
fi

# ##### fzf #####
if command -v fzf &>/dev/null; then
  eval "$(fzf --zsh)"

  _fzf_compgen_path() {
    fd -H -E .git -E .cache -E . -E .config "$1"
  }
  _fzf_compgen_dir() {
    fd -H -E .git -E .cache -E . -E .config -t d "$1"
  }
  _fzf_comprun() {
    local command=$1
    shift

    case "$command" in
      cd)           fzf --preview='eza --tree --level 1 --color=always {} | head -200' "$@" ;;
      export|unset) fzf --preview="eval 'echo $'{}"                                    "$@" ;;
      ssh)          fzf --preview='dig +short {}'                                      "$@" ;;
      *)            fzf --preview="$FZF_PREVIEW_COMMAND"                               "$@" ;;
    esac
  }
fi

# ##### Plugins #####
if [[ -d $ZDOTDIR/plugins/fzf-tab-completion ]]; then
  source $ZDOTDIR/plugins/fzf-tab-completion/zsh/fzf-zsh-completion.sh
fi
if [[ -d $ZDOTDIR/plugins/zsh-autosuggestions ]]; then
  source $ZDOTDIR/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
fi
if [[ -d $ZDOTDIR/plugins/zsh-syntax-highlighting ]]; then
  source $ZDOTDIR/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# ##### oh-my-posh #####
if command -v oh-my-posh &>/dev/null; then
  eval "$(oh-my-posh init zsh --config $XDG_CONFIG_HOME/oh-my-posh/my.json)"
fi
